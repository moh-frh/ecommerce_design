[{"D:\\____________projects\\__reactJs\\ecommerce\\src\\index.js":"1","D:\\____________projects\\__reactJs\\ecommerce\\src\\App.js":"2","D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\Products\\Products.jsx":"3","D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\Products\\Product.jsx":"4","D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\Products\\styles.js":"5","D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\Navbar\\Navbar.js":"6","D:\\____________projects\\__reactJs\\ecommerce\\src\\lib\\commerce.js":"7","D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\Cart\\Cart.js":"8","D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\Cart\\styles.js":"9","D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\Cart\\CartItem\\CartItem.js":"10","D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\CheckoutForm\\Checkout.js":"11","D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\CheckoutForm\\styles.js":"12","D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\CheckoutForm\\AdressForm.js":"13","D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\CheckoutForm\\PaymentForm.js":"14","D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\CheckoutForm\\FormInput.js":"15","D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\CheckoutForm\\Payment.js":"16","D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\CheckoutForm\\Review.js":"17"},{"size":148,"mtime":1608390855378,"results":"18","hashOfConfig":"19"},{"size":3154,"mtime":1609017974858,"results":"20","hashOfConfig":"19"},{"size":789,"mtime":1608590478657,"results":"21","hashOfConfig":"19"},{"size":811,"mtime":1608591770797,"results":"22","hashOfConfig":"19"},{"size":484,"mtime":1608416613628,"results":"23","hashOfConfig":"19"},{"size":1740,"mtime":1608587362918,"results":"24","hashOfConfig":"19"},{"size":127,"mtime":1608413826114,"results":"25","hashOfConfig":"19"},{"size":2259,"mtime":1608641399616,"results":"26","hashOfConfig":"19"},{"size":597,"mtime":1608500409784,"results":"27","hashOfConfig":"19"},{"size":244,"mtime":1608591572251,"results":"28","hashOfConfig":"19"},{"size":2477,"mtime":1609017889696,"results":"29","hashOfConfig":"19"},{"size":1208,"mtime":1608641991720,"results":"30","hashOfConfig":"19"},{"size":6223,"mtime":1609010293538,"results":"31","hashOfConfig":"19"},{"size":168,"mtime":1608645848603,"results":"32","hashOfConfig":"19"},{"size":536,"mtime":1608938361611,"results":"33","hashOfConfig":"19"},{"size":2777,"mtime":1609019920643,"results":"34","hashOfConfig":"19"},{"size":1336,"mtime":1609011190917,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1phigy0",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\____________projects\\__reactJs\\ecommerce\\src\\index.js",[],["73","74"],"D:\\____________projects\\__reactJs\\ecommerce\\src\\App.js",[],"D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\Products\\Products.jsx",[],"D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\Products\\Product.jsx",[],"D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\Products\\styles.js",[],["75","76"],"D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\Navbar\\Navbar.js",[],"D:\\____________projects\\__reactJs\\ecommerce\\src\\lib\\commerce.js",[],"D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\Cart\\Cart.js",[],"D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\Cart\\styles.js",[],"D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\Cart\\CartItem\\CartItem.js",[],"D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\CheckoutForm\\Checkout.js",[],"D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\CheckoutForm\\styles.js",[],"D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\CheckoutForm\\AdressForm.js",["77","78","79"],"import React, {useState, useEffect} from 'react'\r\nimport { Button, MenuItem, Grid, Typography, InputLabel, Select} from '@material-ui/core'\r\nimport {useForm, FormProvider} from 'react-hook-form'\r\nimport FormInput from './FormInput'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n\r\n// import InputLabel from '@material-ui/core/InputLabel';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\n// import FormControl from '@material-ui/core/FormControl';\r\n// import Select from '@material-ui/core/Select';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {commerce} from '../../lib/commerce'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\nconst AdressForm = ({checkoutToken, next}) => {\r\n    const methods = useForm();\r\n\r\n    const [ShippingCountries, setShippingCountries] = useState([]);\r\n    const [ShippingCountry, setShippingCountry] = useState('');\r\n    const [Shippingsubdivisions, setShippingsubdivisions] = useState([]);\r\n    const [Shippingsubdivision, setShippingsubdivision] = useState('');\r\n    const [Shippingoptions, setShippingoptions] = useState([]);\r\n    const [Shippingoption, setShippingoption] = useState('');\r\n\r\n    const countries = Object.entries(ShippingCountries).map( ([code, name]) => ({id: code, label: name }));\r\n    const subdivisions = Object.entries(Shippingsubdivisions).map( ([code, name]) => ({id: code, label: name }));\r\n    const options = Shippingoptions.map( (SO) => ({id: SO.id, label: `${SO.description} - (${SO.price.formatted_with_symbols})`  }) );\r\n\r\n\r\n    // console.log(subdivisions)\r\n    \r\n\r\n    const fetshShippingCountries = async (checkoutTokenId) => {\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId)\r\n        // console.log(countries)\r\n        setShippingCountries(countries)\r\n        setShippingCountry(Object.keys(countries)[0]);\r\n    }\r\n\r\n    const fetshSubdivisions = async (countryCode) => {\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode)\r\n        // console.log(countries)\r\n        setShippingsubdivisions(subdivisions)\r\n        setShippingsubdivision(Object.keys(subdivisions)[0]);\r\n    }\r\n\r\n    const fetshShippingOptions = async (checkoutTokenId, country, region = null) => {\r\n        const options  = await commerce.checkout.getShippingOptions(checkoutTokenId, {country, region});\r\n        // console.log(countries)\r\n        setShippingoptions(options);\r\n        setShippingoption(options[0].id);\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        fetshShippingCountries(checkoutToken.id);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (ShippingCountry) fetshSubdivisions(ShippingCountry);\r\n    }, [ShippingCountry])\r\n\r\n    useEffect(() => {\r\n        if (Shippingsubdivision) fetshShippingOptions(checkoutToken.id, ShippingCountry, Shippingsubdivision );\r\n    }, [Shippingsubdivision])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom> shipping address </Typography>\r\n            <FormProvider {...methods}>\r\n                <form onSubmit={ methods.handleSubmit( (data) => next({...data, ShippingCountry, Shippingsubdivision, Shippingoption}) ) }>\r\n                    <Grid container spacing={3}>\r\n                        <FormInput name='firstName' label='First Name' />\r\n                        <FormInput name='lastName' label='last Name' />\r\n                        <FormInput name='adresse1' label='adresse 1' />\r\n                        <FormInput name='email' label='email' />\r\n                        <FormInput name='city' label='city' />\r\n                        <FormInput name='ZIP' label='ZIP' />\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel> shipping country </InputLabel>\r\n\r\n                            <Select value={ShippingCountry} fullWidth onChange={(e)=> setShippingCountry(e.target.value)}>\r\n                                {countries.map( (country) => (\r\n                                    <MenuItem key={country.id} value={country.label}>\r\n                                        {country.label}\r\n                                    </MenuItem>\r\n                                ) )}\r\n                                \r\n                            </Select>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel> shipping subdivision </InputLabel>\r\n\r\n                            <Select value={Shippingsubdivision} fullWidth onChange={(e) => setShippingsubdivision(e.target.value)}>\r\n                                {subdivisions.map((subdiv) => (\r\n                                    <MenuItem key={subdiv.id} value={subdiv.label}>\r\n                                        {subdiv.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                                \r\n                            </Select>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel> shipping options </InputLabel>\r\n\r\n                            <Select value={Shippingoption} fullWidth onChange={(e)=>setShippingoption(e.target.value)}>\r\n                                {options.map((opt) => (\r\n                                    <MenuItem key={opt.id} value={opt.label}>\r\n                                        {opt.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                                \r\n                            </Select>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                        <Button component={Link} to='/cart' variant='outlined'> back to cart </Button>\r\n                        <Button type='submit' variant='contained' color='primary'> next </Button>                        \r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdressForm\r\n","D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\CheckoutForm\\PaymentForm.js",[],"D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\CheckoutForm\\FormInput.js",[],"D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\CheckoutForm\\Payment.js",["80"],"D:\\____________projects\\__reactJs\\ecommerce\\src\\components\\CheckoutForm\\Review.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"81","replacedBy":"85"},{"ruleId":"83","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":19,"column":7,"nodeType":"89","messageId":"90","endLine":19,"endColumn":16},{"ruleId":"91","severity":1,"message":"92","line":71,"column":8,"nodeType":"93","endLine":71,"endColumn":10,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"95","line":79,"column":8,"nodeType":"93","endLine":79,"endColumn":29,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":16,"column":48,"nodeType":"89","messageId":"99","endLine":16,"endColumn":59},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],["100"],["101"],"no-unused-vars","'useStyles' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["102"],"React Hook useEffect has missing dependencies: 'ShippingCountry' and 'checkoutToken.id'. Either include them or remove the dependency array.",["103"],"no-use-before-define","'cardElement' was used before it was defined.","usedBeforeDefined","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"108","text":"109"},"Update the dependencies array to be: [ShippingCountry, Shippingsubdivision, checkoutToken.id]",{"range":"110","text":"111"},[2742,2744],"[checkoutToken.id]",[3010,3031],"[ShippingCountry, Shippingsubdivision, checkoutToken.id]"]